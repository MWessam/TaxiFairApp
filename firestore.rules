rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - only authenticated users can read their own data
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin(request.auth.uid));
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    // Trip cache - only authenticated users can access their own cache
    match /trip_cache/{cacheKey} {
      allow read, write: if request.auth != null && cacheKey.matches('latest_trip_end_' + request.auth.uid);
    }
    
    // Rate limits - only authenticated users can access their own limits
    match /rate_limits/{limitKey} {
      allow read, write: if request.auth != null && limitKey.matches('user_' + request.auth.uid);
    }
    
    // Existing trips rules (update as needed)
    match /trips/{tripId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
  }
  
  // Helper function to check admin role
  function isAdmin(userId) {
    return exists(/databases/$(database)/documents/users/$(userId)) &&
           get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
  }
}